/* 
 * Robot Rally Game logic engine
 *
 * This api controlls the flow of a game and provides it's data. It is desiged to be RESTfull so the structure works simmilar as file system. The service will run and only work in a local network, `game.host` is the IP of the Computer hosting the game and will be found via a IP scan
 *
 * The version of the OpenAPI document: v2.13.3
 * Contact: nbrugger@student.tgm.ac.at
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Tgm.Roborally.Api.Api;
using Tgm.Roborally.Api.Model;
using Tgm.Roborally.Api.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Tgm.Roborally.Api.Test
{
    /// <summary>
    ///  Class for testing TimerStartEvent
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TimerStartEventTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TimerStartEvent
        //private TimerStartEvent instance;

        public TimerStartEventTests()
        {
            // TODO uncomment below to create an instance of TimerStartEvent
            //instance = new TimerStartEvent();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TimerStartEvent
        /// </summary>
        [Fact]
        public void TimerStartEventInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" TimerStartEvent
            //Assert.IsInstanceOfType<TimerStartEvent> (instance, "variable 'instance' is a TimerStartEvent");
        }


        /// <summary>
        /// Test the property 'Subject'
        /// </summary>
        [Fact]
        public void SubjectTest()
        {
            // TODO unit test for the property 'Subject'
        }
        /// <summary>
        /// Test the property 'EndTime'
        /// </summary>
        [Fact]
        public void EndTimeTest()
        {
            // TODO unit test for the property 'EndTime'
        }
        /// <summary>
        /// Test the property 'Duration'
        /// </summary>
        [Fact]
        public void DurationTest()
        {
            // TODO unit test for the property 'Duration'
        }
        /// <summary>
        /// Test the property 'Passable'
        /// </summary>
        [Fact]
        public void PassableTest()
        {
            // TODO unit test for the property 'Passable'
        }
        /// <summary>
        /// Test the property 'RobotsActive'
        /// </summary>
        [Fact]
        public void RobotsActiveTest()
        {
            // TODO unit test for the property 'RobotsActive'
        }

    }

}
