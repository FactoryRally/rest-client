/* 
 * Robot Rally Game logic engine
 *
 * This api controlls the flow of a game and provides it's data. It is desiged to be RESTfull so the structure works simmilar as file system. The service will run and only work in a local network, `game.host` is the IP of the Computer hosting the game and will be found via a IP scan
 *
 * The version of the OpenAPI document: v0.8.0
 * Contact: nbrugger@student.tgm.ac.at
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Tgm.Roborally.Api.Client;
using Tgm.Roborally.Api.Api;
using Tgm.Roborally.Api.Model;

namespace Tgm.Roborally.Api.Test
{
    /// <summary>
    ///  Class for testing MapRepoApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MapRepoApiTests : IDisposable
    {
        private MapRepoApi instance;

        public MapRepoApiTests()
        {
            instance = new MapRepoApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MapRepoApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MapRepoApi
            //Assert.IsType(typeof(MapRepoApi), instance, "instance is a MapRepoApi");
        }

        
        /// <summary>
        /// Test DeleteMap
        /// </summary>
        [Fact]
        public void DeleteMapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mapName = null;
            //instance.DeleteMap(mapName);
            
        }
        
        /// <summary>
        /// Test GetMap
        /// </summary>
        [Fact]
        public void GetMapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mapName = null;
            //var response = instance.GetMap(mapName);
            //Assert.IsType<MapInfo> (response, "response is MapInfo");
        }
        
        /// <summary>
        /// Test GetMaps
        /// </summary>
        [Fact]
        public void GetMapsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetMaps();
            //Assert.IsType<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test SaveMap
        /// </summary>
        [Fact]
        public void SaveMapTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Map map = null;
            //instance.SaveMap(map);
            
        }
        
    }

}
